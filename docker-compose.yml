services:
  # ─────────── API Postgres (fruits_db) ───────────
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha
      POSTGRES_DB: fruits_db
    volumes:
      - data-postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  # ─── Novo: Postgres isolado para user-service (users_db) ───
  postgres-users:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha
      POSTGRES_DB: users_db
    volumes:
      - data-postgres-users:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - backend

  redis:
    image: redis:7-alpine
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

  # ─────────── Migrações API ───────────
  migrate-api:
    image: migrate/migrate:v4.15.1
    depends_on:
      - postgres
    volumes:
      - ./api/migrations:/migrations
    entrypoint:
      - migrate
      - "-path=/migrations"
      - "-database"
      - "postgres://postgres:senha@postgres:5432/fruits_db?sslmode=disable"
      - up
    networks:
      - backend

  # ─── Migrações user-service (users_db) ───
  migrate-user-service:
    image: migrate/migrate:v4.15.1
    depends_on:
      - postgres-users
    volumes:
      - ./user-service/migrations:/migrations
    entrypoint:
      - migrate
      - "-path=/migrations"
      - "-database"
      - "postgres://postgres:senha@postgres-users:5432/users_db?sslmode=disable"
      - up
    networks:
      - backend

  # ─────────────── API ───────────────
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      - migrate-api
      - redis
    environment:
      DATABASE_URL: "postgres://postgres:senha@postgres:5432/fruits_db?sslmode=disable"
      REDIS_URL:     "redis://redis:6379/0"
      RABBITMQ_URL:  "amqp://guest:guest@rabbitmq:5672/"
      JWT_SECRET:    "seu_jwt_secret_aqui"
    ports:
      - "8080:8080"
    networks:
      - backend

  # ────────── User‐Service (consumer) ──────────
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    depends_on:
      - migrate-user-service
      - rabbitmq
    environment:
      DATABASE_URL: "postgres://postgres:senha@postgres-users:5432/users_db?sslmode=disable"
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
    networks:
      - backend

volumes:
  data-postgres:
  data-postgres-users:
  data-redis:

networks:
  backend:
